{"ast":null,"code":"var _jsxFileName = \"D:\\\\taskapp\\\\task-frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchToken } from '../components/Auth/auth';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport SearchComponent from './SearchComponent';\nimport '../assets/styles/dashboard.css'; // Import CSS file for Dashboard page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  console.log(\"Dashboard request recieved\");\n  const [tasks, setTasks] = useState([]);\n  // const [filteredTasks, setFilteredTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = await fetchToken();\n        console.log('token is', token);\n        const response = await fetch('http://localhost:3003/api/tasks', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        console.log(\"task data\", data);\n        setTasks(data);\n        // setFilteredTasks(data);\n      } catch (err) {\n        console.error('Fetch tasks error', err);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleViewSubTasks = async taskId => {\n    try {\n      const token = await fetchToken();\n      console.log(\"token is\", token);\n      navigate(`/subtasks/${taskId}`, {\n        state: {\n          token\n        }\n      });\n    } catch (err) {\n      console.log('Failed to fetch token', err);\n    }\n  };\n  const handleSearchResults = results => {\n    // setFilteredTasks(results); // Update filtered tasks with search results\n    setTasks(results);\n    console.log('Search Results: ', results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [tasks.map(task => console.log(task._id, task.status, task.priority)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/task\",\n        className: \"home-link-button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/subtask\",\n        className: \"home-link-button\",\n        children: \"Create Sub Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchComponent, {\n      entity: \"tasks\",\n      onSearchResults: handleSearchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SubTasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleViewSubTasks(task._id),\n                className: \"subtasks-link\",\n                children: \"View SubTasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"UHGxLB0Ja0TRYNAV7rk63haTGtM=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","fetchToken","Link","useNavigate","SearchComponent","jsxDEV","_jsxDEV","Dashboard","_s","navigate","console","log","tasks","setTasks","fetchTasks","token","response","fetch","headers","ok","Error","data","json","err","error","handleViewSubTasks","taskId","state","handleSearchResults","results","className","children","map","task","_id","status","priority","fileName","_jsxFileName","lineNumber","columnNumber","to","entity","onSearchResults","length","title","description","onClick","_c","$RefreshReg$"],"sources":["D:/taskapp/task-frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchToken } from '../components/Auth/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchComponent from './SearchComponent';\r\n\r\n\r\nimport '../assets/styles/dashboard.css'; // Import CSS file for Dashboard page\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    console.log(\"Dashboard request recieved\");\r\n    const [tasks, setTasks] = useState([]);\r\n    // const [filteredTasks, setFilteredTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const token = await fetchToken();\r\n                console.log('token is', token);                \r\n                const response = await fetch('http://localhost:3003/api/tasks', {\r\n                    headers: {\r\n                        'x-auth-token': token,\r\n                    }\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch tasks');\r\n                }\r\n                const data = await response.json();\r\n                console.log(\"task data\", data);\r\n                setTasks(data);\r\n                // setFilteredTasks(data);\r\n            } catch (err) {\r\n                console.error('Fetch tasks error', err);\r\n            }\r\n        };\r\n\r\n        fetchTasks();\r\n    }, []);\r\n    const handleViewSubTasks = async(taskId) => {\r\n        try {\r\n            const token = await fetchToken();\r\n            console.log(\"token is\", token);\r\n            navigate(`/subtasks/${taskId}`, {\r\n                state: {token}\r\n            });\r\n        }\r\n        catch(err) {\r\n            console.log('Failed to fetch token', err);\r\n        }\r\n    };\r\n    const handleSearchResults = (results) => {\r\n        // setFilteredTasks(results); // Update filtered tasks with search results\r\n        setTasks(results);\r\n        console.log('Search Results: ', results);\r\n    };\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n    {tasks.map((task) => (\r\n        console.log(task._id, task.status, task.priority)\r\n    ))}             \r\n            <h1>Dashboard</h1>\r\n            <p><Link to=\"/task\" className=\"home-link-button\">Create Task</Link></p>\r\n            <p><Link to=\"/subtask\" className=\"home-link-button\">Create Sub Task</Link></p>\r\n            <SearchComponent entity=\"tasks\" onSearchResults={handleSearchResults} /> {/* Include SearchComponent */}\r\n            <div className=\"tasks-table\">\r\n                <h2>Tasks</h2>\r\n                {tasks.length === 0 ? (\r\n                    <p>No tasks available</p>\r\n                ) : (\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th>Status</th>\r\n                                <th>Priority</th>\r\n                                <th>SubTasks</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tasks.map((task) => (\r\n                                <tr key={task._id}>\r\n                                    <td>{task.title}</td>\r\n                                    <td>{task.description}</td>\r\n                                    <td>{task.status}</td>\r\n                                    <td>{task.priority}</td>\r\n                                    <td>\r\n                                        <button onClick={() => handleViewSubTasks(task._id)} className='subtasks-link'>View SubTasks</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}