{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Pie}from'react-chartjs-2';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import axios from'axios';// Register the components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const TaskStatusPieChart=()=>{const[chartData,setChartData]=useState({});useEffect(()=>{const fetchChartData=async()=>{try{const response=await axios.get('http://localhost:3005/api/chart-data?type=pie');const data=response.data;setChartData({labels:['Completed','In Progress','Pending'],datasets:[{label:'# of Tasks',data:[data.completed,data.in_progress,data.pending],backgroundColor:['#36A2EB','#FFCE56','#FF6384'],hoverBackgroundColor:['#36A2EB','#FFCE56','#FF6384']}]});}catch(error){console.error('Error fetching chart data:',error);}};fetchChartData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Task Status Breakdown\"}),/*#__PURE__*/_jsx(Pie,{data:chartData})]});};export default TaskStatusPieChart;","map":{"version":3,"names":["React","useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","axios","jsx","_jsx","jsxs","_jsxs","register","TaskStatusPieChart","chartData","setChartData","fetchChartData","response","get","data","labels","datasets","label","completed","in_progress","pending","backgroundColor","hoverBackgroundColor","error","console","children"],"sources":["D:/taskapp/task-frontend/src/components/TaskChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n// Register the components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst TaskStatusPieChart = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3005/api/chart-data?type=pie');\r\n        const data = response.data;\r\n\r\n        setChartData({\r\n          labels: ['Completed', 'In Progress', 'Pending'],\r\n          datasets: [\r\n            {\r\n              label: '# of Tasks',\r\n              data: [data.completed, data.in_progress, data.pending],\r\n              backgroundColor: ['#36A2EB', '#FFCE56', '#FF6384'],\r\n              hoverBackgroundColor: ['#36A2EB', '#FFCE56', '#FF6384'],\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching chart data:', error);\r\n      }\r\n    };\r\n\r\n    fetchChartData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Status Breakdown</h2>\r\n      <Pie data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskStatusPieChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CACxE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACAR,OAAO,CAACS,QAAQ,CAACR,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,KAAM,CAAAO,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAE9CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CAAC,+CAA+C,CAAC,CACjF,KAAM,CAAAC,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAE1BJ,YAAY,CAAC,CACXK,MAAM,CAAE,CAAC,WAAW,CAAE,aAAa,CAAE,SAAS,CAAC,CAC/CC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,YAAY,CACnBH,IAAI,CAAE,CAACA,IAAI,CAACI,SAAS,CAAEJ,IAAI,CAACK,WAAW,CAAEL,IAAI,CAACM,OAAO,CAAC,CACtDC,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CAClDC,oBAAoB,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CACxD,CAAC,CAEL,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAEDZ,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEL,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BrB,IAAA,CAACR,GAAG,EAACkB,IAAI,CAAEL,SAAU,CAAE,CAAC,EACrB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}