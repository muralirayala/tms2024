{"ast":null,"code":"// components/TaskForm.js\nimport React from'react';// import axios from 'axios';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskForm=_ref=>{let{onSubmit,task}=_ref;// const [title, setTitle] = useState(task ? task.title : '');\n// const [description, setDescription] = useState(task ? task.description : '');\n// const [status, setStatus] = useState(task ? task.status : 'pending');\n// const [dueDate, setDueDate] = useState(task ? task.dueDate : '');\n// const [priority, setPriority] = useState(task ? task.priority : '');\n// const [tags, setTags] = useState(task ? task.tags.join(', '): '');\n// const handleSubmit = async (e) =>  {\n//     e.preventDefault();\n//     const taskData = {\n//         title,\n//         description,\n//         status,\n//         dueDate,\n//         priority,\n//         tags: tags.split(',').map(tag => tag.trim())\n//     };\n//     console.log('task is', task);\n//     console.log('task data', taskData);\n//     try {\n//         if (task) {\n//             const response = await axios.put(`http://localhost:3000/api/tasks/${task.id}`, taskData);\n//             console.log('Task updated:', response.data);\n//         }\n//         else {\n//             const response = await axios.post('http://localhost:3000/api/tasks', taskData);\n//             console.log('Task created:', response.data);\n//         }\n//         onSubmit();\n//     }\n//     catch(err) {\n//         console.error('There was an error creating or updating the task', err);\n//     };\n// };\nreturn/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Ttitle\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\"})]})// <form onSubmit={handleSubmit}>\n//     <div>\n//         <label>Title:</label>\n//         <input type=\"text\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n//     </div>\n//     <div>\n//         <label>Description</label>\n//         <textarea name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n//     </div>\n//     <div>\n//         <label>Status</label>\n//         <select name=\"status\" value={status} onChange={(e) => setStatus(e.target.value)}>\n//             <option value=\"pending\">Pending</option>\n//             <option value=\"inprogress\">In Progress</option>\n//             <option value=\"completed\">Completed</option>\n//         </select>\n//     </div>\n//     <div>\n//         <label>Due Date</label>\n//         <input type=\"date\" name=\"dueDate\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\n//     </div>\n//     <div>\n//         <label>Priority</label>\n//         <select name=\"priority\" value={priority} onChange={(e) => setPriority(e.target.value)}>\n//             <option value=\"low\">Low</option>\n//             <option value=\"medium\">Medium</option>\n//             <option value=\"high\">High</option>\n//         </select>\n//     </div>\n//     <div>\n//         <label> Tags (comma-separated)</label>\n//         <input type=\"text\" name=\"tags\" value={tags} onChange={(e) => setTags(e.target.value)} />\n//     </div>\n//     <button type='submit'>Save</button>\n// </form>\n;};export default TaskForm;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TaskForm","_ref","onSubmit","task","children","type"],"sources":["D:/taskapp/task-frontend/src/components/TaskForm.js"],"sourcesContent":["// components/TaskForm.js\r\nimport React from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\nconst TaskForm = ({onSubmit, task}) => {\r\n    // const [title, setTitle] = useState(task ? task.title : '');\r\n    // const [description, setDescription] = useState(task ? task.description : '');\r\n    // const [status, setStatus] = useState(task ? task.status : 'pending');\r\n    // const [dueDate, setDueDate] = useState(task ? task.dueDate : '');\r\n    // const [priority, setPriority] = useState(task ? task.priority : '');\r\n    // const [tags, setTags] = useState(task ? task.tags.join(', '): '');\r\n    // const handleSubmit = async (e) =>  {\r\n    //     e.preventDefault();\r\n    //     const taskData = {\r\n    //         title,\r\n    //         description,\r\n    //         status,\r\n    //         dueDate,\r\n    //         priority,\r\n    //         tags: tags.split(',').map(tag => tag.trim())\r\n    //     };\r\n    //     console.log('task is', task);\r\n    //     console.log('task data', taskData);\r\n    //     try {\r\n    //         if (task) {\r\n    //             const response = await axios.put(`http://localhost:3000/api/tasks/${task.id}`, taskData);\r\n    //             console.log('Task updated:', response.data);\r\n    //         }\r\n    //         else {\r\n    //             const response = await axios.post('http://localhost:3000/api/tasks', taskData);\r\n    //             console.log('Task created:', response.data);\r\n    //         }\r\n    //         onSubmit();\r\n    //     }\r\n    //     catch(err) {\r\n    //         console.error('There was an error creating or updating the task', err);\r\n    //     };\r\n    // };\r\n    return (\r\n        <form>\r\n            <label>Ttitle</label>\r\n            <input type=\"text\" />\r\n        </form>\r\n        // <form onSubmit={handleSubmit}>\r\n        //     <div>\r\n        //         <label>Title:</label>\r\n        //         <input type=\"text\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Description</label>\r\n        //         <textarea name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Status</label>\r\n        //         <select name=\"status\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n        //             <option value=\"pending\">Pending</option>\r\n        //             <option value=\"inprogress\">In Progress</option>\r\n        //             <option value=\"completed\">Completed</option>\r\n        //         </select>\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Due Date</label>\r\n        //         <input type=\"date\" name=\"dueDate\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n        //     </div>\r\n        //     <div>\r\n        //         <label>Priority</label>\r\n        //         <select name=\"priority\" value={priority} onChange={(e) => setPriority(e.target.value)}>\r\n        //             <option value=\"low\">Low</option>\r\n        //             <option value=\"medium\">Medium</option>\r\n        //             <option value=\"high\">High</option>\r\n        //         </select>\r\n        //     </div>\r\n        //     <div>\r\n        //         <label> Tags (comma-separated)</label>\r\n        //         <input type=\"text\" name=\"tags\" value={tags} onChange={(e) => setTags(e.target.value)} />\r\n        //     </div>\r\n        //     <button type='submit'>Save</button>\r\n        // </form>\r\n    );\r\n};\r\n\r\nexport default TaskForm;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGA,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAsB,IAArB,CAACC,QAAQ,CAAEC,IAAI,CAAC,CAAAF,IAAA,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACIF,KAAA,SAAAK,QAAA,eACIP,IAAA,UAAAO,QAAA,CAAO,QAAM,CAAO,CAAC,cACrBP,IAAA,UAAOQ,IAAI,CAAC,MAAM,CAAE,CAAC,EACnB,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CAER,CAAC,CAED,cAAe,CAAAL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}