{"ast":null,"code":"// Subtask.js\nimport React,{useState}from'react';import axios from\"axios\";import{useNavigate}from'react-router-dom';import'../assets/styles/subtask.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SubTaskForm=()=>{const[formData,setFormData]=useState({title:'',description:'',status:'pending',dueDate:'',parentTaskId:'',createdBy:''});const navigate=useNavigate();const[error,setError]=useState('');const[success,setSuccess]=useState('');const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{await axios.post('http://localhost:3002/api/subtasks',formData);setSuccess('Subtask created successfully.');setError('');navigate('/Dashboard');}catch(err){setError('Failed while creating subtask');setSuccess('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form-title\",children:\"Create SubTask\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"subtask-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:formData.title,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:formData.description,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:formData.status,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in-progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Due date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dueDate\",value:formData.dueDate,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Parent Task ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"parentTaskId\",value:formData.parentTaskId,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Created By\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"createdBy\",value:formData.createdBy,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Create SubTask\"})]})]});};export default SubTaskForm;","map":{"version":3,"names":["React","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","SubTaskForm","formData","setFormData","title","description","status","dueDate","parentTaskId","createdBy","navigate","error","setError","success","setSuccess","handleInputChange","e","name","value","target","handleSubmit","preventDefault","post","err","className","children","onSubmit","type","onChange","required"],"sources":["D:/taskapp/task-frontend/src/pages/Subtask.js"],"sourcesContent":["// Subtask.js\r\nimport React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../assets/styles/subtask.css';\r\n\r\nconst SubTaskForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        status: 'pending',\r\n        dueDate: '',\r\n        parentTaskId: '',\r\n        createdBy: '',\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:3002/api/subtasks', formData);\r\n            setSuccess('Subtask created successfully.');\r\n            setError('');\r\n            navigate('/Dashboard');\r\n        }\r\n        catch(err) {\r\n            setError('Failed while creating subtask');\r\n            setSuccess('');\r\n        }\r\n    };\r\n    return (\r\n        <div className='form-container'>\r\n            <h2 className='form-title'>Create SubTask</h2>\r\n            {error && <p className='error-message'>{error}</p>}\r\n            {success && <p className='success-message'>{success}</p>}\r\n            <form onSubmit={handleSubmit} className='subtask-form'>\r\n                <div className='form-group'>\r\n                    <label>Title</label>\r\n                    <input type='text' name='title' value={formData.title} onChange={handleInputChange} required />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Description</label>\r\n                    <textarea name='description' value={formData.description} onChange={handleInputChange} required></textarea>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Status</label>\r\n                    <select name='status' value={formData.status} onChange={handleInputChange}>\r\n                        <option value='pending'>Pending</option>\r\n                        <option value='in-progress'>In Progress</option>\r\n                        <option value='completed'>Completed</option>\r\n                    </select>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Due date</label>\r\n                    <input type='date' name='dueDate' value={formData.dueDate} onChange={handleInputChange} required />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Parent Task ID</label>\r\n                    <input type='text' name='parentTaskId' value={formData.parentTaskId} onChange={handleInputChange} required />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Created By</label>\r\n                    <input type='text' name='createdBy' value={formData.createdBy} onChange={handleInputChange} />\r\n                </div>\r\n                <button type='submit' className='submit-button'>Create SubTask</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport default SubTaskForm;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CACrCU,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,SAAS,CACjBC,OAAO,CAAE,EAAE,CACXC,YAAY,CAAE,EAAE,CAChBC,SAAS,CAAE,EACf,CAAC,CAAC,CACF,KAAM,CAAAC,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9B,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAqB,iBAAiB,CAAIC,CAAC,EAAK,CAC7B,KAAM,CAACC,IAAI,CAAEC,KAAK,CAAC,CAAGF,CAAC,CAACG,MAAM,CAC9BhB,WAAW,CAAC,CACR,GAAGD,QAAQ,CACX,CAACe,IAAI,EAAGC,KACZ,CAAC,CAAC,CACN,CAAC,CACD,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAA1B,KAAK,CAAC2B,IAAI,CAAC,oCAAoC,CAAEpB,QAAQ,CAAC,CAChEY,UAAU,CAAC,+BAA+B,CAAC,CAC3CF,QAAQ,CAAC,EAAE,CAAC,CACZF,QAAQ,CAAC,YAAY,CAAC,CAC1B,CACA,MAAMa,GAAG,CAAE,CACPX,QAAQ,CAAC,+BAA+B,CAAC,CACzCE,UAAU,CAAC,EAAE,CAAC,CAClB,CACJ,CAAC,CACD,mBACId,KAAA,QAAKwB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3B3B,IAAA,OAAI0B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,CAC7Cd,KAAK,eAAIb,IAAA,MAAG0B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEd,KAAK,CAAI,CAAC,CACjDE,OAAO,eAAIf,IAAA,MAAG0B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEZ,OAAO,CAAI,CAAC,cACxDb,KAAA,SAAM0B,QAAQ,CAAEN,YAAa,CAACI,SAAS,CAAC,cAAc,CAAAC,QAAA,eAClDzB,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,OAAK,CAAO,CAAC,cACpB3B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACV,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEhB,QAAQ,CAACE,KAAM,CAACwB,QAAQ,CAAEb,iBAAkB,CAACc,QAAQ,MAAE,CAAC,EAC9F,CAAC,cACN7B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1B3B,IAAA,aAAUmB,IAAI,CAAC,aAAa,CAACC,KAAK,CAAEhB,QAAQ,CAACG,WAAY,CAACuB,QAAQ,CAAEb,iBAAkB,CAACc,QAAQ,MAAW,CAAC,EAC1G,CAAC,cACN7B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,QAAM,CAAO,CAAC,cACrBzB,KAAA,WAAQiB,IAAI,CAAC,QAAQ,CAACC,KAAK,CAAEhB,QAAQ,CAACI,MAAO,CAACsB,QAAQ,CAAEb,iBAAkB,CAAAU,QAAA,eACtE3B,IAAA,WAAQoB,KAAK,CAAC,SAAS,CAAAO,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC3B,IAAA,WAAQoB,KAAK,CAAC,aAAa,CAAAO,QAAA,CAAC,aAAW,CAAQ,CAAC,cAChD3B,IAAA,WAAQoB,KAAK,CAAC,WAAW,CAAAO,QAAA,CAAC,WAAS,CAAQ,CAAC,EACxC,CAAC,EACR,CAAC,cACNzB,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,UAAQ,CAAO,CAAC,cACvB3B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACV,IAAI,CAAC,SAAS,CAACC,KAAK,CAAEhB,QAAQ,CAACK,OAAQ,CAACqB,QAAQ,CAAEb,iBAAkB,CAACc,QAAQ,MAAE,CAAC,EAClG,CAAC,cACN7B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7B3B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACV,IAAI,CAAC,cAAc,CAACC,KAAK,CAAEhB,QAAQ,CAACM,YAAa,CAACoB,QAAQ,CAAEb,iBAAkB,CAACc,QAAQ,MAAE,CAAC,EAC5G,CAAC,cACN7B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvB3B,IAAA,UAAA2B,QAAA,CAAO,YAAU,CAAO,CAAC,cACzB3B,IAAA,UAAO6B,IAAI,CAAC,MAAM,CAACV,IAAI,CAAC,WAAW,CAACC,KAAK,CAAEhB,QAAQ,CAACO,SAAU,CAACmB,QAAQ,CAAEb,iBAAkB,CAAE,CAAC,EAC7F,CAAC,cACNjB,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,gBAAc,CAAQ,CAAC,EACrE,CAAC,EACN,CAAC,CAEd,CAAC,CACD,cAAe,CAAAxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}